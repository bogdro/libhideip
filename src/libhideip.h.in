/*
 * LibHideIP - A library for hiding local IP address.
 *	-- public header file.
 *
 * Copyright (C) 2011-2024 Bogdan Drozdowski, bogdro (at) users . sourceforge . net
 * License: GNU General Public License, v3+
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _LIBHIDEIP_H
/* this should be just defined, with no value, to work better with SWIG: */
# define _LIBHIDEIP_H

/*
 This block allows SWIG (http://www.swig.org) to parse this file and generate
 native bindings to libhideip for many languages in their desired versions.
 */
# ifdef SWIG
#  undef _LIBHIDEIP_H
#  undef SWIG
%module libhideip
%{
#  include "libhideip.h"
%}
# endif

/* LHIP_PARAMS is a macro used to wrap function prototypes, so that
        compilers that don't understand ANSI C prototypes still work,
        and ANSI C compilers can issue warnings about type mismatches. */
# undef LHIP_PARAMS
# if defined (__STDC__) || defined (_AIX) \
	|| (defined (__mips) && defined (_SYSTYPE_SVR4)) \
	|| defined (WIN32) || defined (__cplusplus)
#  define LHIP_PARAMS(protos) protos
#  define LHIP_ANSIC
#  define LHIP_VOID void
# else
#  define LHIP_PARAMS(protos) ()
#  undef LHIP_ANSIC
#  define LHIP_VOID
# endif


# ifdef __cplusplus
extern "C" {
# endif

/**
 * Enables the use of libhideip by any program that calls this function.
 * Simply linking the program with libhideip enables it.
 */
extern void libhideip_enable LHIP_PARAMS ((void));

/**
 * The compile-time version of this library.
 */
# define LHIP_VERSION "@VERSION@"

/**
 * Returns the run-time version of this library.
 */
extern const char * libhideip_version LHIP_PARAMS ((void));

/**
 * The name of the environment variable which can point to an
 * additional banning file.
 */
# define LHIP_BANNING_ENV	"LIBHIDEIP_BANFILE"

/**
 * The name of the additional program banning file that can exists in the
 * user's home directories.
 */
# define LHIP_BANNING_USERFILE	".libhideip.progban"


# ifdef __cplusplus
}
# endif

#endif	/* _LIBHIDEIP_H */
