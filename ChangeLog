2017-04-25	Bogdan Drozdowski <bogdandr@op.pl>

	* LibHideIP version 1.5
	  Fixes and improvements to code related with banning the library from
	  interfering with fragile programs. Many code improvements and
	  simplifications in readability and maintenance. Fixed freopen*
	  functions. More unit tests.
	* README, INSTALL, doc/libhideip.texi.in: added a note that compiling
	  with a C++ compiler won't work right now due to some variable
	  casting constructs that are forbidden in C++. Added a note saying
	  that glibc 2.11 (and potentially other versions) has a bug which may
	  cause LibHideIP to hang during initialization in dl(v)sym. Describe
	  the new configuration option: --enable-gui-applications.
	* doc/libhideip.texi.in: added a note saying that GUI applications may
	  have problems when starting.
	* src/lhip_priv.h: added LHIP_SET_ERRNO and LHIP_GET_ERRNO macros to
	  simplify code in many places. Added LHIP_MEMCOPY, LHIP_MEMSET and
	  the respective replacement functions' declarations. Added
	  LHIP_MAKE_ERRNO_VAR for declaring and initializing a variable that
	  holds the temporary errno value. Renamed SET_ERRNO_PERM to
	  LHIP_SET_ERRNO_PERM and SET_ERRNO_MISSING to LHIP_SET_ERRNO_MISSING.
	  Added a warning when glibc 2.11 is used.
	* src/banning-generic.c: a generic file with functions related to
	  banning programs and files from being interfered with by the library.
	  Improved code deduplication and maintenance. The file will be used
	  in LibSecRm, LibHideIP and LibNetBlock.
	* src/lhip_banning.c: include and use banning-generic.c.
	* src/lhip_net.c (recvmsg, sendmsg, socketpair): preserving errno when
	  calling the original function.
	* src/*.c: simplified errno usage - not setting where not checked
	  after or when not in a user-called function. Use macros to set and
	  get errno where required. Simplify memcpy/memset usage to macros and
	  conditionally-defined functions. Changed checking for the library
	  initialization status.
	* src/lhip_opens.c (freopen, freopen64): ban also the standard streams.
	* src/lhip_resolve.c (__lhip_is_forbidden_name): skip the trailing dot
	  when comparing hostnames/addresses. Simplify exit statements.
	* test/lhiptest.c (test_openat_banned, test_fopen_link_banned,
	  test_freopen_link, test_freopen_link_banned): corrected checking the
	  errno value, just in case.
	* src/lhip_addr.c (__lhip_read_local_addresses): moved restoring errno
	  after the loggers, just in case it could get modified. Align the
	  temporary global buffers, if available.
	* src/lhip_addr.c (__lhip_is_local_addr): simplified checking for
	  matches with local addresses.
	* src/lhip_net.c (getifaddrs): simplified duplicated code
	* test/lhiptest.c (test_freopen_stdout, test_freopen_stdout_banned,
	  test_freopen_link_banned_stdout): added unit tests for the freopen()
	  function with standard streams.
	* src/lhip_net.c (getnameinfo, getaddrinfo): zero-terminating the
	  resulting hostname.
	* src/lhip_exec.c (__lhip_append_path, __lhip_is_forbidden_program):
	  fixed potential buffer overflows
	* src/lhip_exec.c (__lhip_append_path): calculate string lengths once
	* src/lhip_exec.c (__lhip_is_forbidden_program): fixed potential use
	  of uninitialized values
	* src/lhip_exec.c (__lhip_get_target_link_path): fixed compile error
	  in case malloc() is missing (which should never happen).
	* src/lhip_exec.c: fixed LNB_ATTR to LHIP_ATTR
	* src/lhip_main.c, src/lhip_priv.h: added __lhip_duplicate_string()
	* src/lhip_addr.c (__lhip_add_local_address): using the new
	  __lhip_duplicate_string() function to add new addresses
	* src/lhip_addr.c (__lhip_change_data): makeing sure that name is
	  zero-terminated, small speed improvement
	* src/lhip_net.c (gethostname): wipe the real hostname if the option
	  --enable-gui-applications=yes was not provided.
	* src/lhip_net.c, src/lhip_opens.c, src/lhip_pcap.c: surrounded
	  external definitions with >extern "C"<.
	* test/lhiptest.c (test_gethostbyaddr6, test_gethostbyaddr_r6,
	  test_gethostbyname2_banned6, test_gethostbyname2_r_banned6,
	  test_getipnodebyaddr6, test_getipnodebyname6,
	  test_getaddrinfo_banned6, test_socket_inet6, test_socket_banned_raw6,
	  test_getsockname6, test_bind6, test_bind_banned6, test_getsockopt6,
	  test_getsockopt_banned6, test_setsockopt6, test_setsockopt_banned6,
	  test_ioctl_banned1_ipv6, test_ioctl_banned2_ipv6,
	  test_ioctl_banned3_ipv6, test_ioctl_banned4_ipv6,
	  test_ioctl_banned5_ipv6, test_ioctl_banned6_ipv6): added tests
	  related to IPv6.
	* test/lhiptest.c (test_socket_inet, test_socket_unix,
	  test_socket_banned_netlink, test_socket_banned_raw): tests renamed
	  to better match what they test.
	* test/lhiptest.c (test_getsockopt_banned): fixed setting parameter
	* test/lhiptest.c (test_res_mkquery_banned): fixed logger
	* test/lhiptest.c: fixed LSR_ANSIC to LHIP_ANSIC (shouldn't be used
	  anyway).
	* test/lhiptest.c (test_open_link_banned): fixed logger

2015-09-06	Bogdan Drozdowski <bogdandr@op.pl>

	* LibHideIP version 0.9
	  Library marked as not requiring executable stack (security reasons).
	  Fixed banning functions. Fixed errno setting. Fixed runtime
	  dependencies. Added unit tests (check >= 0.9.8 required). Minor
	  code cleanup.
	* configure.ac: checking for the -Wl,-z -Wl,noexecstack compiler
	  option and -z noexecstack linker option. Rearranging the check for
	  libdl to enable the default behaviour (adding it to the LIBS) - this
	  allows using tests and removes the need to preload libdl along with
	  LibHideIP. Checking for the "check" library for unit tests. Checking
	  for the symlink() function for tests. Checking for libpcap and
	  libresolve which should also be present at runtime
	* test: added unit tests for LibHideIP
	* libhideip.spec.in: changed the LibHideIP URL address to SourceForge
	  and updated filename for the new version
	* doc/libhideip.3: added SourceForge addresses
	* src/Makefile.am: added the "randomnames" target for easy internal
	  name randomization (hiding LibHideIP from simple symbol listing),
	  updated library version number
	* src/randomize_names_perl.sh: optimized the name matching
	* README, INSTALL, doc/libhideip.texi.in: described in detail how to
	  hide LibHideIP by randomizing internal names
	* src/lhip_banning.c: created new constants for common #defines
	* src/lhip_priv.h: added SET_ERRNO_MISSING to set the errno
	  when the original function is missing on the system. Fixed the
	  value. Added SET_ERRNO_PERM to set the errno when the operation is
	  forbidden
	* src/lhip_exec.c (__lhip_is_forbidden_program): fixed endless loop,
	  fixed link reading
	* src/lhip_exec.c (__lhip_is_forbidden_file): fixed link checking
	* src/lhip_ioctl.c (ioctl): potential fix for compiling on Solaris
	* src/lhip_addr.c: added functions for setting & checking the neutral
	  IP addresses and masks
	* src/lhip_ioctl.c, src/lhip_net.c: using the new address setting and
	  checking functions from src/lhip_addr.c
	* src/lhip_addr.c (__lhip_is_local_addr): fixed one check in
	  comparing the given address to a local IPv6 address.

2013-06-02	Bogdan Drozdowski <bogdandr@op.pl>

	* LibHideIP version 0.8
	  Corrected getting the local addresses and limitations on
	  allowed operations. Other small fixes and updates.
	* configure.ac: checking for the -O3 compiler option, checking for
	  the realloc() function. No longer requiring malloc().
	* src/libhideip.h.in: documented constants introduced in 0.7 and
	  correctly indented them.
	* doc/libhideip.texi.in, doc/libhideip.3: changed "~" to $HOME
	* README, INSTALL, doc/libhideip.texi.in: changed "rpm" to "RPM"
	* doc/libhideip.texi.in: put commands in separate paragraphs
	* src/lhip_banning.c: added the stdlib.h file, required by getenv()
	  and the malloc.h file (optional)
	* src/Makefile.am: made libhideip.h not distributed
	* src/lhip_addr.c (__lhip_read_local_addresses): fixed reading the
	  local addresses, moved common code to separate functions, resizing
	  the array with local addresses when necessary
	* src/lhip_net.c (socket, socketpair): fixed the socket type check
	  so that some normal operations work again
	* src/lhip_exec.c (__lhip_is_forbidden_file,
	  __lhip_is_forbidden_program): fixed compiling without malloc(),
	  getenv(), sys/stat.h and readlink().
	* src/lhip_exec.c (__lhip_is_forbidden_file): small improvements
	* src/lhip_opens.c: removed including the unnecessary malloc.h file
	* src/lhip_ioctl.c: removed unnecessary variables
	* src/lhip_exec.c: added a missing "unused" attribute

2012-09-30	Bogdan Drozdowski <bogdandr@op.pl>

	* LibHideIP version 0.7.1
	  This is a bugfix-only release.
	* configure.ac: Not checking for snprintf() and lstat().
	* src/lhip_banning.c (__lhip_is_banned_in_file): removed incorrect
	  debugging messages.

2012-09-23	Bogdan Drozdowski <bogdandr@op.pl>

	* LibHideIP version 0.7
	  Banning mechanism fixed and updated with new possibilities.
	* doc/libhideip.texi.in: added @dircategory and @direntry.
	* configure.ac: added a summary of enabled options. Added two new
	  command-line banning-related options: --enable-environment
	  (enables additional banning files pointed to by environment
	  variables) and --enable-user-files (enables additional banning
	  files in users' home directories). Using AS_HELP_STRING to format
	  help for options. Added the --with-max-host-names option to specify
	  the maximum number of hostname and aliases of the host LibHideIP
	  is running on.
	* src/lhip_priv.h: added missing LHIP_ prefixes
	* src/lhip_banning.c: support for banning files pointed to by
	  environment variables and additional banning files in users' home
	  directories. Fixed checking if a program is banned.
	* src/libhideip.h.in: added constants for the names of the environment
	  variable poiting to an additional banning file location and
	  additional banning files in users' home directories
	* src/Makefile.am: made libhideip.h not only in PUBLIC_INTERFACE,
	  since now it is used in lhip_banning.c.
	* README, INSTALL, doc/libhideip.texi.in, doc/libhideip.3: updated
	  with new banning information. Minor corrections.

2012-02-12	Bogdan Drozdowski <bogdandr@op.pl>

	* libhideip version 0.6
	  Made the header file SWIG-enabled, updated copyright, code cleanup,
	  efficiency corrected, more forbidden programs, documentation update,
	  improved compatibility with non-ANSI-C compilers.
	* libhideip.spec.in: corrected the description of the devel package.
	* src/libhideip.h.in: SWIG compatibility.
	* src/lhip_banning.c (__lhip_check_prog_ban): stopping the checking as
	  soon as a match is found. Preserving errno.
	* src/lhip_exec.c: moved __lhip_is_forbidden_file() from lhip_opens.c
	  and made it public. Using a constant for the separator char between
	  different paths. Added more forbidden programs.
	* src/{lhip_addr.c,lhip_net.c}: moved identical strings to variables
	* doc/libhideip.texi.in: a new chapter about the development library
	  and using libhideip with SWIG, added links to SourceForge pages,
	  marked the URLs.

2011-10-05	Bogdan Drozdowski <bogdandr@op.pl>

	* libhideip version 0.5
	  Providing a public interface to use by programmers to secure their
	  programs. Added a file for pkg-config with library information.
	  Verified that no symbol whose name can't be randomized can be
	  reached from the outside.
	* src/{lhip_public.c.in,libhideip.h.in}: new files with the public
	  interface to libhideip.
	* configure.ac: added the --enable-public-interface option to enable
	  the library's public interface, added new C compiler flags to
	  check for: -Wwrite-strings and -Waggregate-return. Added generating
	  a file for pkg-config.
	* README: changed "program" to "library" when talking about libhideip,
	  added the --enable-public-interface configure option.
	* INSTALL: added the --enable-public-interface configure option.
	* doc/libhideip.texi.in: added the --enable-public-interface configure
	  option
	* libhideip.pc.in: a data file for pkg-config.
	* src/lhip_priv.h: added __lhip_end to the list of public functions,
	  so the name randomizing scripts get pick it up.
	* libhideip.spec.in: added the -devel package
	* Makefile.am: added the file for pkg-config.

2011-03-17	Bogdan Drozdowski <bogdandr@op.pl>

	* libhideip version 0.4
	  Run flawfinder, rats and cppcheck on the code and fixed a few
	  performance and syntax problems.
	* src/lhip_net.c (getsockname): fixed syntax error.
	* src/lhip_priv.h: blocking opening /dev/net*, /dev/tcp*, /dev/udp*,
	  fixed declarations for C++.
	* README: added the glibc license block. Updated RPM creating.
	* libhideip.spec.in: added README, COPYING, AUTHORS and ChangeLog
	  to the RPM package.
	* src/lhip_pcap.c, src/lhip_main.c: blocking libpcap functions.
	* doc/libhideip.texi.in: updated RPM creating and the list of blocked
	  functions.
	* configure.ac: fixed double CFLAGS on compile
	* src/lhip_addr.c: separated address checking from the main file.

2010-05-22	Bogdan Drozdowski <bogdandr@op.pl>

	* libhideip version 0.3
	  Upgrade to newer autotools, gcc and libtool. Added some copyright
	  notices when using code from the GNU C library. Run flawfinder on
	  the code and changed some parts according to the result. Fixed
	  compiling on non-ANSI-C compilers.
	* configure.ac: added AC_CONFIG_MACRO_DIR, recommended by libtoolize.
	  Added checks for headers related to network name resolving.
	* src/lhip_ioctl.c (ioctl): fixed signed/unsigned variable problem.
	  Added some untested Solaris support.
	* src/lhip_cfg.h.in: enabled HAVE_OPENAT*.
	* src/lhip_exec.c: forbid executing more programs: "ntop", anything
	  with "sniff" or "shark" (like Wireshark) in name. Changed "tcpdump"
	  to "tcp" in banning, to match more programs.
	* src/lhip_net.c (socket): forbid creating raw and packet sockets.
	* src/randomize_names*: added name randomization scripts from LibSecRm,
	  to allow easier hiding of LibHideIP's functions' names (to prevent
	  detecting LibHideIP).
	* src/lhip_net.c (getnameinfo): now checking also for the zero address
	  and all detected local addresses.
	* src/lhip_net.c (bind): new function to prevent guessing the local
	  address by attempting to bind to all posiible addresses in turn.
	* src/lhip_net.c (getsockname): new function to prevent from getting
	  the local address from an already-created socket.
	* src/lhip_net.c (getsockopt, setsockopt): new functions to prevent
	  from getting the local address from a socket by reading its options.
	* src/lhip_net.c (socketpair): new function to prevent from creating
	  raw sockets that could lead to revealing the local address.
	* src/lhip_main.c (__lhip_is_local_addr): fixed comparing IPv4
	  addresses with IPv6 addresses.
	* src/lhip_net.c: fixed problems when memcpy() isn't available.
	* src/lhip_exec.c (system): fixed too small buffer allocated.
	* src/lhip_net.c (getifaddrs): checking network mask and broadcast
	  addresses for NULL and checking their type before changing data.
	* src/lhip_opens.c, src/lhip_exec.c: zeroing buffers for file names.
	* src/lhip_priv.h: defined LHIP_MIN, LHIP_MAX, LHIP_MAXPATHLEN
	  LHIP_ANSIC (for function prototypes) here.
	* doc/libhideip.texi.in: added one more limitation of LibHideIP.
	  Updated information how to hide LibHideIP.
	* src/lhip_resolve.c: new file that blocks name resolving functions
	  for localhost/localdomain.
	* libhideip.spec.in: corrected warnings displayed by rpmlint.

2009-02-16	Bogdan Drozdowski <bogdandr@op.pl>

	* libhideip version 0.2
	  Renamed PATH_SEP to LHIP_PATH_SEP to avoid conflicts.
	* README, INSTALL, doc/libhideip.texi.in: small update.
	* libhideip.spec.in: fixed the version number.
	* src/lhip_exec.c: forbid executing more programs: "arp", "netstat",
	  anything with "domainname" in name, "ipmaddr", anything with "mii"
	  in name, "route", "ifdown", "ifup", "iftop", "tcpdump", anything
	  with "ppp" in name, anything with "isdn" in name, "ssh", "telnet",
	  "rsh". Forbid reading of files with "mactab" in name.
	* src/lhip_opens.c, src/lhip_ioctl.c: better checking for
	  stdarg.h/varargs.h.

2008-12-23	Bogdan Drozdowski <bogdandr@op.pl>

	* libhideip version 0.1
	  Intercepting the following functions: gethostbyaddr, gethostbyaddr_r,
	  gethostbyname, gethostbyname_r, gethostbyname2, gethostbyname2_r,
	  gethostent, gethostent_r, getipnodebyaddr, getipnodebyname,
	  getifaddrs, getnameinfo, getaddrinfo, socket, recvmsg, sendmsg,
	  gethostname (lhip_net.c), execve, system (lhip_exec.c), ioctl
	  (lhip_ioctl.c), uname (lhip_uname.c), fopen64, freopen64, open64,
	  openat64, fopen, freopen, open, openat (lhip_opens.c).
	  All these functions could either directly or indirectly (opening
	  files) lead to discovering the local public IP address (not the
	  "127.0.0.1" address, but the external addresses of the machine's
	  network interfaces). Support for banning programs is added - the
	  banned programs get the original results, not hidden.
	  Compiles on OpenBSD.
	* doc: TeXinfo documentation comes compiled, manual page added.
	* README: quick installation guide
	* AUTHORS: authors list
	* libhideip.spec: an RPM spec file - can be used to build RPMs.
