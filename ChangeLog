2025-01-03	Bogdan Drozdowski <bogdro /at- users . sourceforge . net>

	* LibHideIP version 2.3
	  Fixed compile errors after name randomisation. Checking for more
	  compile warnings. Portability updates - LibHideIP now compiles on
	  Solaris/SunOS. Added support for systems with a less advanced /proc
	  filesystem. Code quality updates. Updates in the build system.
	  Updates in unit tests and new tests. Documentation updates.
	* configure.ac: Check the number of arguments for gethostbyaddr_r(),
	  gethostbyname_r() and gethostent_r(). Check the type of the second
	  argument to ioctl(). If rpc/rpc.h is found, don't check for rpc.h.
	  Check for the -Wnull-dereference, -Wunused-parameter, -Walloc-zero,
	  and -Wdangling-else compiler options. Add the auxiliary build
	  directory build-aux and move some of the build helper files there.
	  Check for the getpid() function.
	* src/lhip_net.c (gethostbyaddr_r, gethostbyname_r, gethostent_r),
	  src/lhip_priv.h: Declare the right number of arguments for
	  gethostbyaddr_r(), gethostbyname_r() and gethostent_r(). Fixes
	  compile on SunOS partially.
	* src/lhip_ioctl.c: Include unistd.h (where ioctl() is on SunOS).
	* src/lhip_ioctl.c (ioctl): Use the discovered type of the second
	  argument to ioctl().
	* src/lhip_addr.c (__lhip_read_local_addresses): Update parameter list
	  when calling gethostbyaddr_r(), gethostbyname_r() or gethostent_r().
	* src/lhip_net.c (bindresvport, bindresvport6): Declare conditionally
	  and not on SunOS where the parameters are different and subject to
	  change.
	* src/banning-generic.c, src/lhip_banning.c: Fixed compiling after
	  name randomization.
	* src/lhip_addr.c (__lhip_change_data): Overwrite h_aliases instead of
	  setting them to NULL. Can fix some crashes.
	* src/lhip_opens.c: Fixed argument types of va_arg.
	* src/lhip_exec.c (__lhip_is_forbidden_file,
	  __lhip_is_forbidden_program): Fixed potential NULL pointer accesses
	  when memory couldn't be allocated and memory leaks.
	* src/lhip_exec.c (__lhip_get_target_link_path_fd),
	  src/banning-generic.c (__banning_get_exename): Use the current PID
	  first, for systems where /proc/self doesn't exist.
	* src/lhip_addr.c (__lhip_is_local_addr, __lhip_check_ipv6_value),
	  src/lhip_net.c (getnameinfo, bind): Compare the address directly
	  with the field, not the whole structure.
	* src/lhip_exec.c (__lhip_get_target_link_path): Better buffer limit
	  checking. Removed unnecessary setting the final zero byte. Use the
	  off64_t type when calling stat64().
	* src/lhip_cfg.h.in: Added constants for the number of arguments for
	  gethostbyaddr_r(), gethostbyname_r() and gethostent_r(). Added a
	  constant for the type of the second argument to ioctl(). Added a
	  flag to allow compiling on Solaris/SunOS. Added the _ALL_SOURCE and
	  _NETBSD_SOURCE flags.
	* src/lhip_priv.h: Use the discovered type of the second argument to
	  ioctl().
	* src/lhip_main.c (__lhip_copy_string), src/lhip_priv.h, src/*.c:
	  Replaced strncpy with a dedicated function where applicable.
	* src/lhip_addr.c (__lhip_change_addrinfo_data), src/lhip_net.c
	  (getaddrinfo): Move common code for overwriting addrinfo structures
	  to a separate function.
	* src/lhip_cfg.h.in, src/lhip_public.c.in, src/libhideip.h.in: Mark
	  files as generated in header comments.
	* src/*.c, src/lhip_priv.h: Many code quality updates (SonarCloud):
	  #undef macros only if defined, write only one declaration per line,
	  use the 'const' qualifier more, set variables to default values only
	  if they're not being set later, move #includes to top of the file,
	  simplify code, shorten names.
	* test/lhiptest_opens.c (test_fopen_proc), test/lhiptest_net.c
	  (test_bind_banned6): Check if the file we're opening exists.
	* test/lhiptest_opens.c (test_open_proc): Added a test for opening a
	  file in /proc using open().
	* test/lhiptest_exec.c (test_execveat_banned_empty_path,
	  test_execveat_banned_empty_path_link): Fixed error messages.
	* test/lhiptest_exec.c: Allow passing the directory of 'ifconfig'.
	* test/lhiptest_net.c, test/lhiptest_resolve.c: Changed test domain.
	* test/lhiptest_other.c (test_symb_func): Changed the symbol name.
	* test/lhiptest_resolve.c: Free memory in res_nXXX() functions.
	* test/lhiptest_uname.c (test_uname): Removed unnecessary check.
	* test/lhiptest_exec.c (test_fexecve_banned): Fixed a warning about
	  the 'const' qualifier.
	* test/*.c: Moved common includes and defines to lhiptest_common.h.
	  Replaced the deprecated fail() with ck_abort_msg().
	* test/Makefile.am: Link tests directly to the object files, not the
	  built library, for better coverage measuring.
	* m4/ax_func_which_gethostbyaddr_r.m4,
	  m4/ax_func_which_gethostbyname_r.m4,
	  m4/ax_func_which_gethostent_r.m4: New macros to check the
	  number of arguments for gethostbyaddr_r(), gethostbyname_r() and
	  gethostent_r().
	* m4/ax_prototype.m4: Disable the "unused-variable" warning so that it
	  doesn't interfere when checking function prototypes.
	* libhideip.spec.in:  Added "texinfo" to BuildRequires. Added the
	  %{?dist} tag to 'Release:', as recommended by the Fedora packaging
	  guidelines:
	  https://docs.fedoraproject.org/en-US/packaging-guidelines/DistTag/.
	  Fixed running 'ldconfig'. Added a flag to keep libtool files. Added
	  running 'libtool finish' during installation. Simplified cleaning
	  /etc/ld.so.preload in pre-uninstall.
	* INSTALL-LHIP.txt: Renamed from "INSTALL", which autotools overwrite.
	* doc/libhideip.texi.in: Added information about using FMSec
	  (https://fmsec.sourceforge.io) to load LibHideIP for single programs.
	  Small syntax updates.
	* INSTALL, compile, depcomp, doc/texinfo.tex, missing, test-driver,
	  config.guess, config.sub, install-sh, ltmain.sh, m4/libtool.m4,
	  m4/ltsugar.m4: Forced update using new Autotools.
	* src/*.c, src/*.h, src/*.h.in, src/*.c.in, test/*.c, **/Makefile.am,
	  libhideip.spec.in, configure.ac: Added or updated the license
	  block and copyright.

2022-12-13	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 2.2
	  Significant portability updates. LibHideIP now compiles on FreeBSD
	  and macOS. Intercepting new functions and improvements in the old.
	  More checking for banned programs. Safer checking and wiping of
	  data. New unit tests. Code quality improvements. Improvements in
	  the build system. Other small changes.
	* configure.ac: Added checking for the canonicalize_file_name(),
	  realpath(), bindresvport() and bindresvport6() functions. Added
	  checking for the "-fanalyzer" compiler option. Use dedicated macros
	  to check for the mode_t and ssize_t types. Changed the program's
	  configured name, add URL in AC_INIT(). Added checking for the
	  'struct pcap_rmtauth' type. Added checking for the rpc.h header
	  which declares bindresvport() on FreeBSD.
	* src/lhip_exec.c (__lhip_get_target_link_path): Use realpath() or
	  canonicalize_file_name() if available. Fixed setting buffer length
	  and zeroing without malloc().
	* src/lhip_pcap.c: declare pcap_findalldevs_ex() also conditionally to
	  avoid compilation errors when libpcap is missing.
	* src/lhip_resolve.c (__lhip_is_forbidden_name): Safer string copy.
	* src/lhip_exec.c (__lhip_is_forbidden_program): Safer string copy.
	  Use LHIP_MEMSET instead of a loop. Calculate string lengths once.
	* src/lhip_uname.c: Workaround a compatibility issue with FreeBSD.
	* src/lhip_main.c (__lhip_main): Surround the whole libanl block with
	  conditional compiling.
	* src/lhip_pcap.c, src/lhip_priv.h: Fixed compiling when libpcap is
	  missing.
	* src/lhip_net.c (gethostname): Return an error if gethostname() is
	  missing even if configured in GUI-app mode.
	* src/lhip_exec.c (__lhip_is_forbidden_file): Free the obtained name
	  always if non-NULL. It's always a new copy now, no need to check.
	  Found by GCC code analyzer. Make sure to zero-terminate the name
	  also without malloc().
	* src/lhip_net.c (getaddrinfo, getnameinfo): Zero-out the whole
	  previous hostname before setting "localhost".
	* src/lhip_addr.c (__lhip_change_data): Zero-out the whole previous
	  hostname before setting "localhost".
	* src/lhip_exec.c (execve, fexecve, execveat): Check also if argv[0]
	  is not a banned program name (for e.g. symlinks uname->coreutils).
	* src/lhip_exec.c (execveat): Check also if the path is empty and
	  AT_EMPTY_PATH is given - in that case it's the directory descriptor
	  that will be executed, so check that for banning.
	* src/lhip_net.c (bindresvport, bindresvport6): New intercepted
	  functions.
	* src/lhip_main.c (__lhip_main, __lhip_real_bindresvport_location,
	  __lhip_real_bindresvport6_location), src/lhip_cfg.h.in,
	  src/lhip_priv.h: Added support for the newly-intercepted functions.
	* src/lhip_uname.c (uname): Make sure to zero-terminate the nodename.
	* src/lhip_opens.c (open64): Fixed unused variable (found by Codacy).
	* src/lhip_addr.c (__lhip_read_local_addresses): Fixed processing the
	  same hostname twice (found by Codacy).
	* src/lhip_opens.c: Intercept fopen64, freopen64, open64 and openat64
	  only when present.
	* src/lhip_priv.h: Added missing types to fix compile errors. Stopped
	  redefining ssize_t - the new, dedicated macros do it for us. Define
	  'struct pcap_rmtauth' only if not found on the system.
	* src/lhip_cfg.h.in: Added constants for the canonicalize_file_name(),
	  realpath(), bindresvport() and bindresvport6() functions, the rpc.h
	  headers and the 'struct pcap_rmtauth' type. Updated the package
	  names. Enabled HAVE_EXECVEAT, now present in glibc.
	* src/lhip_cfg.h.in, src/*.{c,h,in}: Moved compatibility flags to
	  lhip_cfg.h.in and added compatibility flags to allow compiling on
	  FreeBSD and macOS.
	* src/Makefile.am: Renamed 'randomnames' to 'x-randomnames' and made
	  it PHONY.
	* src/*.{c,h,in}, test/*.{c,h}, doc/Makefile.am: Updated license
	  blocks.
	* Makefile.am: Renamed 'pack' to 'x-pack'.
	* src/randomize_names_*.sh: Apply fixes recommended by Codacy.
	* libhideip.spec.in: Cleaning the rpm build root directory after
	  building.
	* test/Makefile.am: Renamed 'zcompile' to 'x-compile'. Added a flag to
	  use config.h.
	* test/lhiptest_exec.c: Added tests for executing links to forbidden
	  programs, including the new test for execveat with an empty path.
	  Added a #define for the directory containing the forbidden 'ifconfig'
	  program. Checking if errno contains the expected value.
	* test/lhiptest_net.c: Added tests for the intercepted bindresvport()
	  and bindresvport6() functions.
	* README, INSTALL: Updated the paths to built RPM files.
	* doc/libhideip.texi.in: Leave just the SourceForge website address.
	  Other minor updates.
	* doc/libhideip.3: Leave just the SourceForge website address.
	* doc/sf_bogdro.css: Added a CSS file for the HTML documentation.

2022-03-19	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 1.9.2
	  This is a bugfix- and compatibility-improvement-only release. No new
	  features are added. Fixed compile errors on newer systems. Fixed
	  errors related to special situations, found by 'cppcheck'. Updated
	  copyright and license blocks. Other fixes. Documentation updated.
	* configure.ac: Updated using Autoconf 2.71. Double-quote all AC_MSG_*
	  messages. Added enabling all Automake warnings. Added calling
	  AM_PROG_AR as recommended by Automake warnings. Switched to using
	  AC_HEADER_RESOLV to check for the <resolv.h> header. The summary
	  shows disabled public interface also as the default. Changed the
	  order of parameter types when searching for getnameinfo() to match
	  newer C libraries earlier.
	* m4/ax_gcc_warn_unused_result.m4: Updated for Autoconf 2.71.
	* m4/ax_prototype.m4: Replaced ac_prototype.m4 and updated for
	  Autoconf 2.71.
	* src/lhip_priv.h: Added missing #includes to fix compile errors on
	  glibc 2.34.
	* src/lhip_net.c (getnameinfo, gethostname): Simplified the code,
	  fixing compiler warnings.
	* src/lhip_exec.c (__lhip_get_target_link_path): Fixed free()ing the
	  static array when malloc() is unavailable. Always return a copy of
	  the input that can be free()d, to avoid returning a local variable
	  from __lhip_get_target_link_path_fd() (found by 'cppcheck').
	* src/lhip_addr.c (__lhip_read_local_addresses,
	  __lhip_add_local_address): Removed useless code found by 'cppcheck'.
	* src/lhip_addr.c (__lhip_check_hostent_match): Made the function's
	  definition also 'static' to match the declaration.
	* src/lhip_addr.c (__lhip_is_local_addr): Fixed wrong length when
	  checking IPv6 addresses.
	* src/banning-generic.c (__banning_is_banned): Simplified some code,
	  fixing warnings found by 'cppcheck'.
	* Makefile.am: Replaced ac_prototype.m4 with ax_prototype.m4.
	* test/lhiptest_exec.c: Defined _GNU_SOURCE to fix compile error on
	  glibc 2.34.
	* libhideip.spec.in: Removed commented-out deprecated commands.
	* README: Restored the file. Moved building RPMs the new way above
	  the old way.
	* INSTALL: Moved building RPMs the new way above the old way.
	* doc/libhideip.texi.in: Many improvements in the documentation: made
	  URLs into proper links, use the TeXinfo @file, @samp, @command,
	  @code and @verbatim properly, added a link to the home page on the
	  "What is LibHideIP" page, added "Reporting issues".
	* doc/Makefile.am: Added flags for generating the HTML documentation.

2021-08-25	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 1.9.1
	  This is a bugfix- and compatibility-improvement-only release. No new
	  features are added. Fixed compile errors on newer systems. Fixed
	  memory leaks and one endless loop. Other minor fixes.
	* configure.ac: Added checking for the -fstack-check compiler option.
	  Added a check for the parameter type for pcap_findalldevs_ex(),
	  because it was changed in an incompatible way in libpcap 1.9.1.
	* src/lhip_cfg.h.in: added HAVE_PCAP_FINDALLDEVS_EX
	* src/lhip_exec.c (__lhip_get_target_link_path): leave when the link
	  target is the same as the link itself to avoid endless loops
	* src/lhip_pcap.c (pcap_findalldevs_ex): use a variable parameter type
	  provided by 'configure'. Define the function conditionally, otherwise
	  if the function is not present, the correct parameter type cannot be
	  established and compilation may fail.
	* src/lhip_pcap.c (pcap_fopen_offline,
	  pcap_fopen_offline_with_tstamp_precision, pcap_findalldevs): fixed
	  the debug loggers for long pointers
	* src/lhip_addr.c (__lhip_read_local_addresses): fixed the debug
	  loggers for long pointers
	* src/lhip_resolv.c (getaddrinfo_a): fixed the debug loggers for long
	  pointers
	* src/lhip_net.c (gethostname): declare variables only when needed
	* src/lhip_resolv.c (__lhip_is_forbidden_name): simplify a bit
	* src/lhip_exec.c (fexecve): always free() the obtained name
	* src/lhip_exec.c (__lhip_get_target_link_path): fixed one memory leak
	  on an error path
	* src/*.c: added a flag to disable malloc() for compile checking
	* test/lhiptest_exec.c (test_fexecve_banned): use 'wget', because
	  'ifconfig' changes location on various systems
	* test/Makefile.am: move common elements to variables

2021-01-10	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 1.9
	  Added intercepting new functions. Portability improvements.
	  LibHideIP should work better with some filesystems which have i-node
	  numbers greater than 2^32-1 and compile under non-ANSI-C. Checked
	  running LibHideIP under GCC address & undefined behaviour sanitizers.
	  Improvements in unit tests.
	* configure.ac: added checking for the stat(), stat64(), lstat64() and
	  getaddrinfo_a functions. Added checking for the -Wstringop-truncation
	  and -Wduplicated-branches compiler options. Added checking for the 
	  linux/random.h and the directory headers, for unit tests.
	* src/lhip_cfg.h.in: added new constants
	* src/lhip_exec.c (__lhip_get_target_link_path_fd): fixed a warning
	  about a potential buffer overflow.
	* src/lhip_net.c (socket, socketpair): skip checking PF_NETLINK if
	  it's the same as AF_NETLINK to avoid compiler warnings
	* src/lhip_net.c (gethostname): call the original function also if the
	  given buffer size is 0
	* src/lhip_resolve.c, src/lhip_main.c: added intercepting
	  getaddrinfo_a()
	* src/lhip_exec.c (__lhip_is_forbidden_program): Check also for
	  stat64() and skip if both stat64() and stat() are not available.
	* src/lhip_exec.c (__lhip_get_target_link_path): replace rindex() with
	  the more portable strrchr(). Check also for lstat64() and skip if
	  both lstat64() and lstat() are not available.
	* src/lhip_exec.c: forbid executing of 'coreutils' and 'hostid'. Forbid
	  reading '/proc/net/fib_trie'.
	* src/lhip_pcap.c, src/lhip_main.c: added intercepting
	  pcap_findalldevs_ex()
	* src/banning_generic.c (__banning_is_banned): fixed using the user
	  banning filename instead of the global one
	* src/*.c*: added a preprocessor block that marks ANSI C as disabled,
	  for internal testing compiler compatibility.
	* src/lhip_priv.h: corrected some declarations to avoid warnings
	* doc/libhideip.texi.in, doc/libhideip.3: updated the addresses
	* doc/libhideip.texi.in: more blocks in @command{}
	* Makefile.am: stop using 'tar --delete', for systems where GNU tar is
	  not installed or is not the default. Marked the 'pack' target PHONY
	* libhideip.spec.in: removed obsolete commented-out commands, updated
	  the URL, added BugURL. Using macros for common elements.
	* test/lhiptest_common.c: a new file with code common to tests
	* test/{lhiptest_exec.c,lhiptest_opens.c,lhiptest_banning.c}: Moved
	  common code to lhiptest_common.c.
	* test/*.c, test/lhiptest_common.h: added a prolog macro with logging
	  common for all tests
	* test/lhiptest_other.c: new tests for finding private symbols in the
	  library.
	* test/{lhiptest_ioctl.c,lhiptest_net.c}: moved common code to
	  separate functions
	* test/lhiptest_ioctl.c (test_ioctl): switch the test to call ioctl()
	  on /dev/random, which should be accessible by everybody and not
	  cause access problems or other errors
	* test/lhiptest_ioctl.c: use the looback interface name in tests
	  instead of hardcoded system-dependent names
	* test/lhiptest_fopens.c: added tests for a device file and for an
	  object in the /proc filesystem.
	* test/lhiptest_net.c (test_getsockname6): use the structures for IPv6
	  instead of IPv6. This fixes a logical error and a buffer overrun.
	* test/lhiptest_net.c: free()ing some of the test results to avoid
	  memory leaking warnings from sanitizers
	* test/Makefile.am: added the new lhiptest_other test, added a target
	  to just compile the tests

2019-02-08	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 1.8
	  Added intercepting new functions. Fixed initialization code - fixed
	  lookup for fopen(). Improvements in unit tests. Improvements in code
	  portability and compatibility. Better code maintainability, updated
	  copyright and documentation.
	* configure.ac: moved AC_LANG(C) before AC_PROG_LIBTOOL for improved
	  compatibility. Added checking for the -Wno-nonnull-compare compiler
	  flag to avoid warnings about defensive programming code. Fixed the
	  check for -lresolv on some systems, which don't have the "res_query"
	  binary symbol, but #define it as a preprocessor macro. Added checking
	  for execveat(), fexecve(), strdup() and snprintf(). Added checking
	  for the -Wchkp, -Wformat-overflow=2, -Wduplicated-cond, -Wrestrict
	  and -Woverlength-strings compiler warning options
	* missing: script updated from new autoconf
	* src/lhip_main.c (__lhip_main): when the fopen() functions can't be
	  found by versioned lookup, try normal lookup. This should fix
	  compatibility with newer systems and make banning work there
	* src/*.c: define LHIP_VOID to be 'void' in ANSI C and use that in
	  function definitions for better readability
	* src/lhip_net.c, src/lhip_opens.c, src/lhip_pcap.c: simplified the
	  missing functions' declarations
	* src/lhip_exec.c: added defining the constants (_DEFAULT_SOURCE) for
	  better compatibility with new C libraries
	* src/lhip_cfg.h.in: added missing constants
	* src/lhip_main.c (__lhip_main, __lhip_end): opening and closing the
	  libresolv.so library. Even though it's included in the dependencies,
	  some systems don't load it, resulting in "function not available"
	  errors, even though in reality the library was loaded by the program
	  and the functions would work. If the resolving functions were not
	  found during the standard search, they are searched for in the open
	  library. Fix the search when the resolving functions are defined as
	  preprocessor macros.
	* src/lhip_main.c (__lhip_end): closing the host entry file on unload
	* src/lhip_pcap.c: updated declarations of Windows-only functions
	* src/lhip_exec.c (__lhip_get_target_link_path): rewrite the function
	  usage to correctly drop the "const" qualifier. Add support for
	  symlink targets with paths not absolute, but relative to the symlink.
	  Free the allocated memory on each iteration when it would become
	  unused and lost. Start with duplicating the parameter so that it
	  can be passed as a literal.
	* src/lhip_exec.c (__lhip_is_forbidden_program): change variables'
	  types to more correct ones (size_t), matching their usage. Fix
	  separating the program's name from its arguments.
	* src/lhip_resolve.c (__lhip_is_forbidden_name), src/lhip_ioctl.c
	  (ioctl): change variables' types to more correct ones (size_t),
	  matching their usage
	* src/lhip_main.c: define __lhip_duplicate_string only when strdup()
	  is not available. Fix using LSR_ANSIC
	* src/lhip_priv.h: define LHIP_STRDUP to be either strdup or the
	  __lhip_duplicate_string() function
	* src/lhip_addr.c (__lhip_add_local_address), src/lhip_exec.c
	  (__lhip_is_forbidden_file): start using LHIP_STRDUP
	* src/lhip_addr.c (__lhip_read_local_addresses): corrected debugging
	  display (just in case)
	* src/lhip_addr.c (__lhip_check_hostent_match): made the conditions
	  more correct for validation tools
	* src/lhip_addr.c (__lhip_free_local_addresses): freeing the memory
	  during library unload
	* src/lhip_opens.c: created generic 32-/64-bit functions with common
	  code to be called from the intercepted functions
	* src/lhip_opens.c (generic_freopen): closing the original stream even
	  if opening the new one is forbidden - prevents resource leaks
	* src/lhip_opens.c (open, open64, openat, openat64), src/lhip_ioctl.c
	  (ioctl): move the logger after parameter initialization to display
	  it properly in code based on old-style varargs
	* src/lhip_main.c, src/lhip_priv.h, src/lhip_exec.c,
	  test/lhiptest_exec.c: added intercepting execveat() and fexecve()
	* src/lhip_main.c, src/lhip_priv.h, src/lhip_resolve.c,
	  test/lhiptest_resolve.c: added intercepting res_nquery, res_nsearch,
	  res_nquerydomain and res_nmkquery
	* src/lhip_main.c, src/lhip_priv.h, src/lhip_pcap.c,
	  test/lhiptest_pcap.c: add support for new libpcap functions (with
	  time stamp precision)
	* libhideip.spec.in: made the spec file more portable (assuming that
	  the required macros are properly defined on the target systems) and
	  removed some rpmlint warnings and errors
	* doc/libhideip.texi.in, doc/libhideip.3: added new URLs, updated the
	  description
	* test/*.c, test/Makefile.am: split the unit tests into separate
	  files, one for each functionality/compilation unit with intercepted
	  functions. Added defining the constants (_DEFAULT_SOURCE) for
	  better compatibility with new C libraries
	* test/lhiptest_ioctl.c (test_ioctl_banned1, test_ioctl_banned3,
	  test_ioctl_banned3_ipv6): Use another default devices if "eth0" is
	  not present
	* test/lhiptest_net.c (verify_hostent): allowing all of "localhost",
	  "localhost6", "127.0.0.1" and "::1" to be valid results. Some systems
	  don't resolve "::1" to "localhost" or "localhost6" and leave the IP
	  address as the result. This should fix IPv6 tests, like
	  test_gethostbyname2_banned6 and test_gethostbyname2_r_banned6
	* test/lhiptest_exec.c (test_system): call "/bin/cat" instead of just
	  "cat", because that doesn't work on some systems (probably those
	  where /bin/cat is a symlink to 'coreutils')
	* test/lhiptest_exec.c (test_execve_banned): don't pass NULL as the
	  program's environment - pass an array with one NULL instead
	* test/lhiptest_exec.c (test_system_banned2): a new test to check for
	  the found bug in __lhip_is_forbidden_program()
	* test/lhiptest_exec.c: fix testing if the banned program wasn't
	  indeed run
	* test/lhiptest_exec.c: remove unused variables
	* test/lhiptest_resolve.c: explicitly calling res_init()
	* test/lhiptest_net.c (test_recvmsg, test_sendmsg): change variables'
	  types to more correct ones
	* test/lhiptest_ioctl.c (test_ioctl_banned2, test_ioctl_banned2_ipv6,
	  test_ioctl_banned5, test_ioctl_banned5_ipv6): change variables'
	  types to more correct ones
	* test/lhiptest_banning.c: a new unit test for testing banning

2017-04-25	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 1.5
	  Fixes and improvements to code related with banning the library from
	  interfering with fragile programs. Many code improvements and
	  simplifications in readability and maintenance. Fixed freopen*
	  functions. More unit tests.
	* README, INSTALL, doc/libhideip.texi.in: added a note that compiling
	  with a C++ compiler won't work right now due to some variable
	  casting constructs that are forbidden in C++. Added a note saying
	  that glibc 2.11 (and potentially other versions) has a bug which may
	  cause LibHideIP to hang during initialization in dl(v)sym. Describe
	  the new configuration option: --enable-gui-applications.
	* doc/libhideip.texi.in: added a note saying that GUI applications may
	  have problems when starting.
	* src/lhip_priv.h: added LHIP_SET_ERRNO and LHIP_GET_ERRNO macros to
	  simplify code in many places. Added LHIP_MEMCOPY, LHIP_MEMSET and
	  the respective replacement functions' declarations. Added
	  LHIP_MAKE_ERRNO_VAR for declaring and initializing a variable that
	  holds the temporary errno value. Renamed SET_ERRNO_PERM to
	  LHIP_SET_ERRNO_PERM and SET_ERRNO_MISSING to LHIP_SET_ERRNO_MISSING.
	  Added a warning when glibc 2.11 is used.
	* src/banning-generic.c: a generic file with functions related to
	  banning programs and files from being interfered with by the library.
	  Improved code deduplication and maintenance. The file will be used
	  in LibSecRm, LibHideIP and LibNetBlock.
	* src/lhip_banning.c: include and use banning-generic.c.
	* src/lhip_net.c (recvmsg, sendmsg, socketpair): preserving errno when
	  calling the original function.
	* src/*.c: simplified errno usage - not setting where not checked
	  after or when not in a user-called function. Use macros to set and
	  get errno where required. Simplify memcpy/memset usage to macros and
	  conditionally-defined functions. Changed checking for the library
	  initialization status.
	* src/lhip_opens.c (freopen, freopen64): ban also the standard streams.
	* src/lhip_resolve.c (__lhip_is_forbidden_name): skip the trailing dot
	  when comparing hostnames/addresses. Simplify exit statements.
	* test/lhiptest.c (test_openat_banned, test_fopen_link_banned,
	  test_freopen_link, test_freopen_link_banned): corrected checking the
	  errno value, just in case.
	* src/lhip_addr.c (__lhip_read_local_addresses): moved restoring errno
	  after the loggers, just in case it could get modified. Align the
	  temporary global buffers, if available.
	* src/lhip_addr.c (__lhip_is_local_addr): simplified checking for
	  matches with local addresses.
	* src/lhip_net.c (getifaddrs): simplified duplicated code
	* test/lhiptest.c (test_freopen_stdout, test_freopen_stdout_banned,
	  test_freopen_link_banned_stdout): added unit tests for the freopen()
	  function with standard streams.
	* src/lhip_net.c (getnameinfo, getaddrinfo): zero-terminating the
	  resulting hostname.
	* src/lhip_exec.c (__lhip_append_path, __lhip_is_forbidden_program):
	  fixed potential buffer overflows
	* src/lhip_exec.c (__lhip_append_path): calculate string lengths once
	* src/lhip_exec.c (__lhip_is_forbidden_program): fixed potential use
	  of uninitialized values
	* src/lhip_exec.c (__lhip_get_target_link_path): fixed compile error
	  in case malloc() is missing (which should never happen).
	* src/lhip_exec.c: fixed LNB_ATTR to LHIP_ATTR
	* src/lhip_main.c, src/lhip_priv.h: added __lhip_duplicate_string()
	* src/lhip_addr.c (__lhip_add_local_address): using the new
	  __lhip_duplicate_string() function to add new addresses
	* src/lhip_addr.c (__lhip_change_data): making sure that name is
	  zero-terminated, small speed improvement
	* src/lhip_net.c (gethostname): wipe the real hostname if the option
	  --enable-gui-applications=yes was not provided.
	* src/lhip_net.c, src/lhip_opens.c, src/lhip_pcap.c: surrounded
	  external definitions with >extern "C"<.
	* test/lhiptest.c (test_gethostbyaddr6, test_gethostbyaddr_r6,
	  test_gethostbyname2_banned6, test_gethostbyname2_r_banned6,
	  test_getipnodebyaddr6, test_getipnodebyname6,
	  test_getaddrinfo_banned6, test_socket_inet6, test_socket_banned_raw6,
	  test_getsockname6, test_bind6, test_bind_banned6, test_getsockopt6,
	  test_getsockopt_banned6, test_setsockopt6, test_setsockopt_banned6,
	  test_ioctl_banned1_ipv6, test_ioctl_banned2_ipv6,
	  test_ioctl_banned3_ipv6, test_ioctl_banned4_ipv6,
	  test_ioctl_banned5_ipv6, test_ioctl_banned6_ipv6): added tests
	  related to IPv6.
	* test/lhiptest.c (test_socket_inet, test_socket_unix,
	  test_socket_banned_netlink, test_socket_banned_raw): tests renamed
	  to better match what they test.
	* test/lhiptest.c (test_getsockopt_banned): fixed setting parameter
	* test/lhiptest.c (test_res_mkquery_banned): fixed logger
	* test/lhiptest.c: fixed LSR_ANSIC to LHIP_ANSIC (shouldn't be used
	  anyway).
	* test/lhiptest.c (test_open_link_banned): fixed logger

2015-09-06	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 0.9
	  Library marked as not requiring executable stack (security reasons).
	  Fixed banning functions. Fixed errno setting. Fixed runtime
	  dependencies. Added unit tests (check >= 0.9.8 required). Minor
	  code cleanup.
	* configure.ac: checking for the -Wl,-z -Wl,noexecstack compiler
	  option and -z noexecstack linker option. Rearranging the check for
	  libdl to enable the default behaviour (adding it to the LIBS) - this
	  allows using tests and removes the need to preload libdl along with
	  LibHideIP. Checking for the "check" library for unit tests. Checking
	  for the symlink() function for tests. Checking for libpcap and
	  libresolve which should also be present at runtime
	* test: added unit tests for LibHideIP
	* libhideip.spec.in: changed the LibHideIP URL address to SourceForge
	  and updated filename for the new version
	* doc/libhideip.3: added SourceForge addresses
	* src/Makefile.am: added the "randomnames" target for easy internal
	  name randomization (hiding LibHideIP from simple symbol listing),
	  updated library version number
	* src/randomize_names_perl.sh: optimized the name matching
	* README, INSTALL, doc/libhideip.texi.in: described in detail how to
	  hide LibHideIP by randomizing internal names
	* src/lhip_banning.c: created new constants for common #defines
	* src/lhip_priv.h: added SET_ERRNO_MISSING to set the errno
	  when the original function is missing on the system. Fixed the
	  value. Added SET_ERRNO_PERM to set the errno when the operation is
	  forbidden
	* src/lhip_exec.c (__lhip_is_forbidden_program): fixed endless loop,
	  fixed link reading
	* src/lhip_exec.c (__lhip_is_forbidden_file): fixed link checking
	* src/lhip_ioctl.c (ioctl): potential fix for compiling on Solaris
	* src/lhip_addr.c: added functions for setting & checking the neutral
	  IP addresses and masks
	* src/lhip_ioctl.c, src/lhip_net.c: using the new address setting and
	  checking functions from src/lhip_addr.c
	* src/lhip_addr.c (__lhip_is_local_addr): fixed one check in
	  comparing the given address to a local IPv6 address.

2013-06-02	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 0.8
	  Corrected getting the local addresses and limitations on
	  allowed operations. Other small fixes and updates.
	* configure.ac: checking for the -O3 compiler option, checking for
	  the realloc() function. No longer requiring malloc().
	* src/libhideip.h.in: documented constants introduced in 0.7 and
	  correctly indented them.
	* doc/libhideip.texi.in, doc/libhideip.3: changed "~" to $HOME
	* README, INSTALL, doc/libhideip.texi.in: changed "rpm" to "RPM"
	* doc/libhideip.texi.in: put commands in separate paragraphs
	* src/lhip_banning.c: added the stdlib.h file, required by getenv()
	  and the malloc.h file (optional)
	* src/Makefile.am: made libhideip.h not distributed
	* src/lhip_addr.c (__lhip_read_local_addresses): fixed reading the
	  local addresses, moved common code to separate functions, resizing
	  the array with local addresses when necessary
	* src/lhip_net.c (socket, socketpair): fixed the socket type check
	  so that some normal operations work again
	* src/lhip_exec.c (__lhip_is_forbidden_file,
	  __lhip_is_forbidden_program): fixed compiling without malloc(),
	  getenv(), sys/stat.h and readlink().
	* src/lhip_exec.c (__lhip_is_forbidden_file): small improvements
	* src/lhip_opens.c: removed including the unnecessary malloc.h file
	* src/lhip_ioctl.c: removed unnecessary variables
	* src/lhip_exec.c: added a missing "unused" attribute

2012-09-30	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 0.7.1
	  This is a bugfix-only release.
	* configure.ac: Not checking for snprintf() and lstat().
	* src/lhip_banning.c (__lhip_is_banned_in_file): removed incorrect
	  debugging messages.

2012-09-23	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* LibHideIP version 0.7
	  Banning mechanism fixed and updated with new possibilities.
	* doc/libhideip.texi.in: added @dircategory and @direntry.
	* configure.ac: added a summary of enabled options. Added two new
	  command-line banning-related options: --enable-environment
	  (enables additional banning files pointed to by environment
	  variables) and --enable-user-files (enables additional banning
	  files in users' home directories). Using AS_HELP_STRING to format
	  help for options. Added the --with-max-host-names option to specify
	  the maximum number of hostname and aliases of the host LibHideIP
	  is running on.
	* src/lhip_priv.h: added missing LHIP_ prefixes
	* src/lhip_banning.c: support for banning files pointed to by
	  environment variables and additional banning files in users' home
	  directories. Fixed checking if a program is banned.
	* src/libhideip.h.in: added constants for the names of the environment
	  variable poiting to an additional banning file location and
	  additional banning files in users' home directories
	* src/Makefile.am: made libhideip.h not only in PUBLIC_INTERFACE,
	  since now it is used in lhip_banning.c.
	* README, INSTALL, doc/libhideip.texi.in, doc/libhideip.3: updated
	  with new banning information. Minor corrections.

2012-02-12	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* libhideip version 0.6
	  Made the header file SWIG-enabled, updated copyright, code cleanup,
	  efficiency corrected, more forbidden programs, documentation update,
	  improved compatibility with non-ANSI-C compilers.
	* libhideip.spec.in: corrected the description of the devel package.
	* src/libhideip.h.in: SWIG compatibility.
	* src/lhip_banning.c (__lhip_check_prog_ban): stopping the checking as
	  soon as a match is found. Preserving errno.
	* src/lhip_exec.c: moved __lhip_is_forbidden_file() from lhip_opens.c
	  and made it public. Using a constant for the separator char between
	  different paths. Added more forbidden programs.
	* src/{lhip_addr.c,lhip_net.c}: moved identical strings to variables
	* doc/libhideip.texi.in: a new chapter about the development library
	  and using libhideip with SWIG, added links to SourceForge pages,
	  marked the URLs.

2011-10-05	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* libhideip version 0.5
	  Providing a public interface to use by programmers to secure their
	  programs. Added a file for pkg-config with library information.
	  Verified that no symbol whose name can't be randomized can be
	  reached from the outside.
	* src/{lhip_public.c.in,libhideip.h.in}: new files with the public
	  interface to libhideip.
	* configure.ac: added the --enable-public-interface option to enable
	  the library's public interface, added new C compiler flags to
	  check for: -Wwrite-strings and -Waggregate-return. Added generating
	  a file for pkg-config.
	* README: changed "program" to "library" when talking about libhideip,
	  added the --enable-public-interface configure option.
	* INSTALL: added the --enable-public-interface configure option.
	* doc/libhideip.texi.in: added the --enable-public-interface configure
	  option
	* libhideip.pc.in: a data file for pkg-config.
	* src/lhip_priv.h: added __lhip_end to the list of public functions,
	  so the name randomizing scripts get pick it up.
	* libhideip.spec.in: added the -devel package
	* Makefile.am: added the file for pkg-config.

2011-03-17	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* libhideip version 0.4
	  Run flawfinder, rats and cppcheck on the code and fixed a few
	  performance and syntax problems.
	* src/lhip_net.c (getsockname): fixed syntax error.
	* src/lhip_priv.h: blocking opening /dev/net*, /dev/tcp*, /dev/udp*,
	  fixed declarations for C++.
	* README: added the glibc license block. Updated RPM creating.
	* libhideip.spec.in: added README, COPYING, AUTHORS and ChangeLog
	  to the RPM package.
	* src/lhip_pcap.c, src/lhip_main.c: blocking libpcap functions.
	* doc/libhideip.texi.in: updated RPM creating and the list of blocked
	  functions.
	* configure.ac: fixed double CFLAGS on compile
	* src/lhip_addr.c: separated address checking from the main file.

2010-05-22	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* libhideip version 0.3
	  Upgrade to newer autotools, gcc and libtool. Added some copyright
	  notices when using code from the GNU C library. Run flawfinder on
	  the code and changed some parts according to the result. Fixed
	  compiling on non-ANSI-C compilers.
	* configure.ac: added AC_CONFIG_MACRO_DIR, recommended by libtoolize.
	  Added checks for headers related to network name resolving.
	* src/lhip_ioctl.c (ioctl): fixed signed/unsigned variable problem.
	  Added some untested Solaris support.
	* src/lhip_cfg.h.in: enabled HAVE_OPENAT*.
	* src/lhip_exec.c: forbid executing more programs: "ntop", anything
	  with "sniff" or "shark" (like Wireshark) in name. Changed "tcpdump"
	  to "tcp" in banning, to match more programs.
	* src/lhip_net.c (socket): forbid creating raw and packet sockets.
	* src/randomize_names*: added name randomization scripts from LibSecRm,
	  to allow easier hiding of LibHideIP's functions' names (to prevent
	  detecting LibHideIP).
	* src/lhip_net.c (getnameinfo): now checking also for the zero address
	  and all detected local addresses.
	* src/lhip_net.c (bind): new function to prevent guessing the local
	  address by attempting to bind to all posiible addresses in turn.
	* src/lhip_net.c (getsockname): new function to prevent from getting
	  the local address from an already-created socket.
	* src/lhip_net.c (getsockopt, setsockopt): new functions to prevent
	  from getting the local address from a socket by reading its options.
	* src/lhip_net.c (socketpair): new function to prevent from creating
	  raw sockets that could lead to revealing the local address.
	* src/lhip_main.c (__lhip_is_local_addr): fixed comparing IPv4
	  addresses with IPv6 addresses.
	* src/lhip_net.c: fixed problems when memcpy() isn't available.
	* src/lhip_exec.c (system): fixed too small buffer allocated.
	* src/lhip_net.c (getifaddrs): checking network mask and broadcast
	  addresses for NULL and checking their type before changing data.
	* src/lhip_opens.c, src/lhip_exec.c: zeroing buffers for file names.
	* src/lhip_priv.h: defined LHIP_MIN, LHIP_MAX, LHIP_MAXPATHLEN
	  LHIP_ANSIC (for function prototypes) here.
	* doc/libhideip.texi.in: added one more limitation of LibHideIP.
	  Updated information how to hide LibHideIP.
	* src/lhip_resolve.c: new file that blocks name resolving functions
	  for localhost/localdomain.
	* libhideip.spec.in: corrected warnings displayed by rpmlint.

2009-02-16	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* libhideip version 0.2
	  Renamed PATH_SEP to LHIP_PATH_SEP to avoid conflicts.
	* README, INSTALL, doc/libhideip.texi.in: small update.
	* libhideip.spec.in: fixed the version number.
	* src/lhip_exec.c: forbid executing more programs: "arp", "netstat",
	  anything with "domainname" in name, "ipmaddr", anything with "mii"
	  in name, "route", "ifdown", "ifup", "iftop", "tcpdump", anything
	  with "ppp" in name, anything with "isdn" in name, "ssh", "telnet",
	  "rsh". Forbid reading of files with "mactab" in name.
	* src/lhip_opens.c, src/lhip_ioctl.c: better checking for
	  stdarg.h/varargs.h.

2008-12-23	Bogdan Drozdowski <bogdro \at\ users . sourceforge . net>

	* libhideip version 0.1
	  Intercepting the following functions: gethostbyaddr, gethostbyaddr_r,
	  gethostbyname, gethostbyname_r, gethostbyname2, gethostbyname2_r,
	  gethostent, gethostent_r, getipnodebyaddr, getipnodebyname,
	  getifaddrs, getnameinfo, getaddrinfo, socket, recvmsg, sendmsg,
	  gethostname (lhip_net.c), execve, system (lhip_exec.c), ioctl
	  (lhip_ioctl.c), uname (lhip_uname.c), fopen64, freopen64, open64,
	  openat64, fopen, freopen, open, openat (lhip_opens.c).
	  All these functions could either directly or indirectly (opening
	  files) lead to discovering the local public IP address (not the
	  "127.0.0.1" address, but the external addresses of the machine's
	  network interfaces). Support for banning programs is added - the
	  banned programs get the original results, not hidden.
	  Compiles on OpenBSD.
	* doc: TeXinfo documentation comes compiled, manual page added.
	* README: quick installation guide
	* AUTHORS: authors list
	* libhideip.spec: an RPM spec file - can be used to build RPMs.
